#!/bin/sh

INFO=""
WARN=""
ERROR=""
PROMPT=""
RESET_COLOR=""

function log() {

	case $1 in
	"info")
		printf "$INFO[INFO]$RESET_COLOR    "
	;;
	"warn")
		printf "$WARN[WARN]$RESET_COLOR    "
	;;
	"error")
		printf "$ERROR[ERROR]$RESET_COLOR   "
	;;
	*)
		echo $1
	;;
	esac

	shift

	echo "$@"
}

function prompt() {
	printf "$PROMPT[PROMPT]$RESET_COLOR  "
	echo -n "$@"
}

# refresh ./bp every time
cp ./bp.in ./bp

if test -z "$BGDIR"; then
	BGDIR="$HOME/Wallpapers/"

fi

log "info" "Using '$BGDIR' for storing Wallpapers"

if test -e "$BGDIR"; then
	prompt "'$BGDIR' exists, use it anyways? [Y/directory] "
	read BP_USE_EXISTS

	if [ ${BP_USE_EXISTS:-y} = "y" ] ; then
		log "info" "Ok. keeping default directory."
	else
		BGDIR="$BP_USE_EXISTS"
	fi
else
	mkdir -p "$BGDIR"
fi

log "info" "Setting '$BGDIR' as default for \`bp\`"
echo "BGDIR='$BGDIR' bp \$1" >> ./bp

# do not override if provided
if test -z "$BP_PREFIX"; then
	BP_PREFIX="/usr/local/bin"
fi

SRCDIR="./bg"

prompt "Import images from custom directory? (will assume it's under $HOME) [N/directory] "
read CUSTOM_DIR

if [ ${CUSTOM_DIR:-n} != "n" ] ; then
	log "info" "Copying from '$CUSTOM_DIR'"
	SRCDIR="/home/$CUSTOM_DIR"
fi

log "info" "Copying all PNG/JPG images in '$SRCDIR' to '$BGDIR'"
cp "$SRCDIR/*.jpeg" "$BGDIR" 2> /dev/null
cp "$SRCDIR/*.jpg" "$BGDIR" 2> /dev/null
cp "$SRCDIR/*.png" "$BGDIR" 2> /dev/null

log "info" 'Checking for `hsetroot`'

HSETROOT=

if ! command -v hsetroot > /dev/null; then
	log "warn" "Hsetroot not found"
else
	HSETROOT=$(command -v hsetroot)
fi

log "info" 'Checking for `feh`'

if ! command -v feh > /dev/null; then
	log "warn" "Feh not found"

	if test -z "$HSETROOT"; then
		log "error" "Nor Hsetroot nor Feh where found in your system" "check for their existence in your package manager"

		exit 1
	fi
fi

if ! test -e "$BP_PREFIX"; then
	log "error" "The directory '$BP_PREFIX' doesn't exist!"

	exit 1
fi

if ! test -z "$(log $PATH | grep -o \"$BP_PREFIX\")"; then
	log "warn" "'$BP_PREFIX' is not in path, installing anyway"
fi

log "info" "Will try to install bp to '$BP_PREFIX', you may be queried for your password."
prompt "Is that okay? [Y/n] "
read BPINSTALL

if [ ${BPINSTALL:-y} = "n" ] ; then
	log "Understandable."
	exit 0
fi

chmod +x ./bp

log "info" "Checking permissions for '$BP_PREFIX' directory"


PREFIX_OWNER=$(stat "$BP_PREFIX" -c "%U")
USERS_PERM=$(stat "$BP_PREFIX" -c "%a" | cut -c 3)


if [ "$USER" = "$PREFIX_OWNER" ] || [ $USERS_PERM -ge 6 ] ; then
	log "info" "Copying ./bp to '$BP_PREFIX'"
	cp ./bp "$BP_PREFIX"
else
	log "warn" "No ownership of '$BP_PREFIX', will try \`sudo\`"
	log "info" "Copying ./bp to '$BP_PREFIX', \`sudo\` will ask for your password"

	if ! sudo -k -u "$PREFIX_OWNER" cp ./bp "$BP_PREFIX"; then
		log "error" "\`sudo\` did not finish properly, please re-run the script"

		exit 1
	fi
fi

log "info" "Success! Install wallpapers to '$BGDIR' and use \`bp l\` to list."

$BP_PREFIX/bp l

prompt "Run \`bp\` with a default wallpaper? [y/N] "
read BPTEST

if [ ${BPTEST:-n} = "n" ] ; then
	log "Have fun!"

	exit 0
fi

$BP_PREFIX/bp templ

